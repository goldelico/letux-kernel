# Solomon SSD2858 chip with input stream from OMAP5 and panel chained to the output
# using the panel-mipi-debug driver

./bl 1

if [ ! -L dcs ]
then
	rm -rf dcs reg
	ln -s /sys/devices/44000000.ocp/58000000.dss/58004000.encoder/58004000.encoder:lcd/dcs dcs
	ln -s /sys/devices/44000000.ocp/58000000.dss/58004000.encoder/58004000.encoder:lcd/reg reg
fi

# make sure the panel is active before trying to send commands
echo nopower >dcs	# enable is unused
sleep .2
echo start >dcs
sleep .1
echo noreset >dcs
sleep .1
echo nostream >dcs

# show some DCS status
echo status >dcs

# DCS sleep out
echo 11 >dcs

# read SCM_CTRL and other registers
for i in 4 8 c 10 14 1c 20 24 28 2c 30 ; do echo $i r >reg; done
# registers
# 0000   SCM
# 1000   MIPIRX
# 2000   VTCM
# 4000   VCU
# 5000   GPIO
# 6000   MIPITX
# enable video bypass
echo 0014 0C7f800F >reg
echo 200C 00000004 >reg
# choose 4-lane mode TX
echo 6008 r >reg
echo 6008 00C40008 >reg
echo 6008 r >reg

# program panel

echo 29 >dcs

# this tries to forward DCS commands to the panel
# so that it is possible to inspect the waveforms
# generated by the SSD2858 at the panel interface

if false
then
	while true
	do
		echo p11 >dcs
		echo p10 >dcs
		sleep 0.1
	done
fi

# echo pstatus >dcs
# enable stream and turn display on
# echo stream >dcs
