#
# log system temperatures (omap3 / omap5) and system operation voltage
#

function findthermal {
	for dev in /sys/class/thermal/thermal_zone*
	do
		if [ "$(cat $dev/type 2>/dev/null)" = "$1" ]
			then echo $dev
			return
		fi
	done
}

function findiio {
	for dev in /sys/bus/iio/devices/iio:device*
	do
		if [ "$(cat $dev/name 2>/dev/null)" = "$1" ]
			then echo $dev
			exit 0
		fi
	done
}

TWL4030_MADC=$(findiio "48070000.i2c:twl@48:madc")        # OMAP3
TWL6030_GPADC=$(findiio "48070000.i2c:twl@48:adc")        # OMAP4
TWL6037_GPADC=$(findiio "palmas-gpadc")   # OMAP5

#echo $TWL4030_MADC
#echo $TWL6030_GPADC
#echo $TWL6037_GPADC

# twl6037 channels
# 0 battery type (source current 0, 5, 15, 20 uA)
# 1 battery NTC
# 2 audio accessory/GP
# 3 temp with ext. diode
# 4 GP
# 5 GP
# 6 VBAT_SENSE
# 7 VCC_SENSE
# 8 Backup Battery
# 9 external charger (VCHG)
# 10 VBUS
# 11 DC-DC current probe (how does this work?)
# 12 internal die temp
# 13 internal die temp
# 14 USB ID line voltage
# 15 test network

[ "$CPU" ] || CPU=$(findthermal cpu_thermal)
[ "$CPU" ] || CPU=$(findthermal cpu)
[ "$CPU" ] || CPU=/dev/null
GPU=$(findthermal gpu_thermal)
CORE=$(findthermal core_thermal)

[ "$BATTERY" ] || BATTERY=$(findthermal bq27621)
[ "$BATTERY" ] || BATTERY=$(findthermal bq27421-0)
[ "$BATTERY" ] || BATTERY=$(findthermal bq27000-battery)
[ "$BATTERY" ] || BATTERY=$(findthermal bq24297)
[ "$BATTERY" ] || BATTERY=/dev/null

VSYS=/dev/null
[ -r "$TWL4030_MADC" ] && VSYS="$TWL4030_MADC/in_voltage12_input"
[ -r "$TWL6030_GPADC" ] && VSYS="$TWL6030_GPADC/in_voltage7_input"
[ -r "$TWL6037_GPADC" ] && VSYS="$TWL6037_GPADC/in_voltage7_input"
#echo $VSYS

function fmt { # $1 is file; $2 is units; $3 optional scale
	VAL=$(cat "$1" 2>/dev/null)
	if [ "$VAL" ]
	then
		# divide by $3 (floating point?)
		echo $(expr "$VAL" / "$3")$2
	fi
}

function temperatures {
	echo	$(date) \
		$(fmt $CPU/temp "째" 1000) \
		$(fmt $GPU/temp "째" 1000) \
		$(fmt $CORE/temp "째" 1000) \
		$(fmt $BATTERY/temp "째" 1000) \
		$(fmt $VSYS "mV" 1) \
		$(fmt /sys/devices/system/cpu/cpufreq/policy0/scaling_cur_freq "MHz" 1000)
}

temperatures
