#!/bin/bash
# dump aess related registers incl. twl

### hm. devmem2-Zugriff f√ºhrt zu Bus-Errors!
### auch bei den alternativen Adressen :(

PATH=$PATH:/usr/bin/$(echo $MACHTYPE | sed s/unknown-//g)

BASE=10180000

function registers {

cat <<END
/* McPDM clock (PRCM) */

/* McPDM padconf */

/* McPDM registers */
#define MCPDM_REG_REVISION		0x49032000
#define MCPDM_REG_SYSCONFIG		0x49032010
#define MCPDM_REG_IRQSTATUS_RAW		0x49032024
#define MCPDM_REG_IRQSTATUS		0x49032028
#define MCPDM_REG_IRQENABLE_SET		0x4903202c
#define MCPDM_REG_IRQENABLE_CLR		0x49032030
#define MCPDM_REG_IRQWAKEEN		0x49032034
#define MCPDM_REG_DMAENABLE_SET		0x49032038
#define MCPDM_REG_DMAENABLE_CLR		0x4903203c
#define MCPDM_REG_DMAWAKEEN		0x49032040
#define MCPDM_REG_CTRL			0x49032044
#define MCPDM_REG_DN_DATA		0x49032048
#define MCPDM_REG_UP_DATA		0x4903204c
#define MCPDM_REG_FIFO_CTRL_DN		0x49032050
#define MCPDM_REG_FIFO_CTRL_UP		0x49032054
#define MCPDM_REG_DN_OFFSET		0x4903205c

END

cat <<END >/dev/null

/* McASP registers */
#define MCASP_TXMASK			0x490280a4
#define MCASP_TXFMT			0x490280a8
#define MCASP_TXFMCTL			0x490280ac
#define MCASP_ACLKXCTL			0x490280b0
#define MCASP_AHCLKXCTL			0x490280b8
#define MCASP_TXTDM			0x490280bc
#define MCASP_EVTCTLX			0x490280c0
#define MCASP_TXSTAT			0x490280c4
#define MCASP_TXTDMSLOT			0x490280c8
#define MCASP_TXCLKCHK			0x490280cc
#define MCASP_TXEVTCTL			0x490280d0
#define MCASP_DITCSRA0			0x49028100
#define MCASP_DITCSRA1			0x49028104
#define MCASP_DITCSRA2			0x49028108
#define MCASP_DITCSRA3			0x4902810c
#define MCASP_DITCSRA4			0x49028110
#define MCASP_DITCSRA5			0x49028114
#define MCASP_DITCSRB0			0x49028118
#others omitted
#define MCASP_DITUDRA0			0x49028130
#define MCASP_DITUDRB0			0x49028148
#define MCASP_XRSRCTL0			0x49028180
#define MCASP_TXBUF0			0x49028200

END

cat <<END

/* AESS registers */
#define OMAP_AESS_REVISION			0x490F1000
#define OMAP_AESS_UNKNOWN			0x490F1010
#define OMAP_AESS_MCU_IRQSTATUS_RAW		0x490F1024
#define OMAP_AESS_MCU_IRQSTATUS			0x490F1028
#define OMAP_AESS_MCU_IRQENABLE_SET		0x490F103C
#define OMAP_AESS_MCU_IRQENABLE_CLR		0x490F1040
#define OMAP_AESS_DSP_IRQSTATUS_RAW		0x490F104C
#define OMAP_AESS_DMAENABLE_SET			0x490F1060
#define OMAP_AESS_DMAENABLE_CLR			0x490F1064
#define OMAP_AESS_EVENT_GENERATOR_COUNTER	0x490F1068
#define OMAP_AESS_EVENT_GENERATOR_START		0x490F106C
#define OMAP_AESS_EVENT_SOURCE_SELECTION	0x490F1070
#define OMAP_AESS_AUDIO_ENGINE_SCHEDULER	0x490F1074
#define OMAP_AESS_AUTO_GATING_ENABLE		0x490F107C
#define OMAP_AESS_DMASTATUS_RAW			0x490F1084
#define OMAP_AESS_CIRCULAR_BUFFER_PERIPHERAL_0	0x490F1100
#define OMAP_AESS_CIRCULAR_BUFFER_PERIPHERAL_7	0x490F111c

END
}

uname -a

registers | while read DEFINE REGISTER ADDR
do
	case "$DEFINE" in
	'#define' )
		VAL=$(devmem2 $ADDR w | fgrep 'Value at address' | cut -d ' ' -f 6)
		[ "$VAL" ] && VAL=$(printf %08x $[$VAL]) || VAL='buserror'
		echo $ADDR $VAL $REGISTER
		;;
	esac
done

function i2cregisters {


cat <<END
# from include/linux/mfd/twl6040.h

#define TWL6040_REG_ASICID		0x01
#define TWL6040_REG_ASICREV		0x02
#define TWL6040_REG_INTID		0x03
#define TWL6040_REG_INTMR		0x04
#define TWL6040_REG_NCPCTL		0x05
#define TWL6040_REG_LDOCTL		0x06
#define TWL6040_REG_HPPLLCTL		0x07
#define TWL6040_REG_LPPLLCTL		0x08
#define TWL6040_REG_LPPLLDIV		0x09
#define TWL6040_REG_AMICBCTL		0x0A
#define TWL6040_REG_DMICBCTL		0x0B
#define TWL6040_REG_MICLCTL		0x0C
#define TWL6040_REG_MICRCTL		0x0D
#define TWL6040_REG_MICGAIN		0x0E
#define TWL6040_REG_LINEGAIN		0x0F
#define TWL6040_REG_HSLCTL		0x10
#define TWL6040_REG_HSRCTL		0x11
#define TWL6040_REG_HSGAIN		0x12
#define TWL6040_REG_EARCTL		0x13
#define TWL6040_REG_HFLCTL		0x14
#define TWL6040_REG_HFLGAIN		0x15
#define TWL6040_REG_HFRCTL		0x16
#define TWL6040_REG_HFRGAIN		0x17
#define TWL6040_REG_VIBCTLL		0x18
#define TWL6040_REG_VIBDATL		0x19
#define TWL6040_REG_VIBCTLR		0x1A
#define TWL6040_REG_VIBDATR		0x1B
#define TWL6040_REG_HKCTL1		0x1C
#define TWL6040_REG_HKCTL2		0x1D
#define TWL6040_REG_GPOCTL		0x1E
#define TWL6040_REG_ALB			0x1F
#define TWL6040_REG_DLB			0x20
#define TWL6040_REG_TRIM1		0x28
#define TWL6040_REG_TRIM2		0x29
#define TWL6040_REG_TRIM3		0x2A
#define TWL6040_REG_HSOTRIM		0x2B
#define TWL6040_REG_HFOTRIM		0x2C
#define TWL6040_REG_ACCCTL		0x2D
#define TWL6040_REG_STATUS		0x2E

END

}

i2cregisters | while read DEFINE REGISTER ADDR
do
	case "$DEFINE" in
	'#define' )
		case "$REGISTER" in
			TWL6040_* ) BUS=0; I2C=0x4b;;
			* ) echo unknown device to i2c bus mapping; exit 1;;
		esac
		VAL=$(i2cget -f -y $BUS $I2C $ADDR)
		[ "$VAL" ] || VAL='--'
		echo $ADDR $VAL $REGISTER
		;;
	esac

done

