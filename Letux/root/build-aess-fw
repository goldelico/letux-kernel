#!/bin/bash
#
# build AESS firmware on destination device (e.g. PandaBoard, OMAP5EVM, Pyra, ...)
# cross-compile may/will need different approach
# tested on Debian 9.13 on letux devices
#
# Source code comes originally from https://github.com/omap-audio
#

THIS="$PWD"
BRANCH=letux-$(uname -r | sed -e 's/-letux.*+//' -e 's/-rc[0-9]*//' -e 's/\([0-9]*\.[0-9]\)*\.0/\1/')
FALLBACK=letux-5.17
case "$BRANCH" in
	letux-[1-4].* | letux-5.[0-9] | letux-5.[0-9].* | letux-5.[0-9]-rc )
		BRANCH=$FALLBACK
		;;
esac
VERSION=009590

#
# preparation of build host
#

echo +++ make sure we have the required build tools
yes | apt-get -yinstall build-essential bison flex bc libssl-dev git autogen automake libtool || exit 1

echo +++ create and go to $PWD/aess
mkdir -p aess && cd aess || exit 1

#
# getting source trees
#

function gitfetch { # $1 = repo, $2 = subdir
	if ! [ -d $2 ]
	then
		rm -rf $2.tmp
		git clone --depth 1 -b $BRANCH $1 $2.tmp && mv $2.tmp $2 || return
	fi
}

LINUX="$PWD/letux-kernel"			# full source tree (for headers)
DEST="$LINUX/sound/soc/ti/aess/firmware"	# subtree where we find the firmware

echo "+++ make sure we have the (complete) kernel source tree ($BRANCH)"
( gitfetch "--depth 1 -b $BRANCH https://github.com/goldelico/letux-kernel.git" letux-kernel && [ -r "$DEST" ] ) ||
( echo "--- fallback to $FALLBACK"; rm -rf letux-kernel; gitfetch "--depth 1 -b $FALLBACK https://github.com/goldelico/letux-kernel.git" letux-kernel ) ||Â exit 1

#
# build generated kernel headers
#

echo +++ configure kernel and build generated headers
(
cd $LINUX || exit

[ -f include/generated/uapi/linux/version.h ] || ( make ARCH=arm letux_lpae_defconfig modules_prepare headers_install INSTALL_HDR_PATH=../linux-headers && ln -sf asm-generic include/asm)
) || exit


#
# build firmware tools and firmware
#

echo +++ configure abefw
(
cd $DEST/abefw || exit

echo +++ autogen the Makefiles
LC_ALL=C ./autogen.sh || exit 1

echo +++ configure
# the configure option --with-hal-dir does not exist "(contrary to README)"
# ./configure --with-linux-dir=$LINUX --with-hal-dir=$PWD/hal || exit 1
./configure --with-linux-dir=$LINUX || exit 1

echo +++ make and install
make || exit 1
make install || exit 1

echo +++ generate data files
scripts/abe-tool.sh $VERSION || exit 1
) || exit

echo +++ configure asoc-fw
(
cd $DEST/asoc-fw || exit

echo +++ autogen the Makefiles
LC_ALL=C ./autogen.sh || exit

echo +++ configure
./configure --with-linux-dir=$LINUX --enable-omap4 || exit

echo +++ make and install
make || exit 1
make install || exit 1

echo "+++ finally generate firmware binary"

scripts/abegen.sh || exit 1

echo "+++ install as omap_aess-adfw.bin"
cp omap4_abe_new /lib/firmware/omap_aess-adfw.bin || exit 1

echo "+++ success ++"
ls -l /lib/firmware/omap_aess-adfw.bin
) || exit

# FIXME: build audio tools as/if needed