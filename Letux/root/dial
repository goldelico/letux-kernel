#
# dial a phone number
#
# usage: dial [ -hf ] [ -hs ] [ -hw | -sw ] number
#   -hf:	enable handsfree
#   -hs:	enable headset
#   -hw:	use hardware voice routing (GTA04A4++ only)
#   -sw:	use software routing (arecord | aplay) [default]
#
# to hang up: dial -
#
# to unlock with pin, use the pin script
#

SCRIPTPATH="$(dirname "$0")"
IF="$($SCRIPTPATH/wwan-on)"

MODE="-sw"	# default
HANDSFREE=-nhf
HEADSET=false

while true
do
	case "$1" in
		-hw | -sw )
			MODE="$1"
			shift
			;;
		-hf )	HANDSFREE=
			shift
			;;
		-hs )	HEADSET=true
			shift
			;;
		* )
			break
			;;
	esac
done

NUMBER="$1"

case "$IF" in
	"" )
		echo Modem Application interface not found >&2
		exit 1
		;;

	/dev/ttyHS* ) # GTA04 with OPTION GTM601W
function turnoff {
	killall arecord
	killall arecord aplay
	(echo "AT+CHUP"; sleep 1) | $SCRIPTPATH/femtocom $IF
}
		trap "turnoff" EXIT
		trap "exit 1" SIGHUP SIGINT SIGTERM

		NUM=$($SCRIPTPATH/findsoundcard "gta04")

		if $HEADSET
		then
			$SCRIPTPATH/tvout 0	# disable tvout
			amixer -c "$NUM" set 'Analog Left Main Mic' nocap
			amixer -c "$NUM" set 'Analog Left Headset Mic' cap
		else
			amixer -c "$NUM" set 'Analog Left Main Mic' cap
			amixer -c "$NUM" set 'Analog Left Headset Mic' nocap
		fi

		if [ "$MODE" = "-hw" ]	# not available on GTA04A3 boards
		then
			amixer -c "$NUM" set 'AVADC Clock Priority' 'Voice high priority'
			amixer -c "$NUM" set 'Voice PCM Interface' 'active'
			amixer -c "$NUM" set 'Voice PCM Out' on
			amixer -c "$NUM" set 'DAC Voice Analog Downlink' unmute
			amixer -c "$NUM" set 'DAC Voice Analog Downlink' 16
			amixer -c "$NUM" set 'DAC Voice Digital Downlink' 44
			amixer -c "$NUM" set 'Earpiece Mixer Voice' on
			amixer -c "$NUM" set 'HeadsetL Mixer Voice' on
			amixer -c "$NUM" set 'HeadsetR Mixer Voice' on
		else
			amixer -c "$NUM" set 'Earpiece Mixer Voice' off
			amixer -c "$NUM" set 'HeadsetL Mixer Voice' off
			amixer -c "$NUM" set 'HeadsetR Mixer Voice' off
		fi

		(
		if [ "$NUMBER" == "-" ]
		then
			echo "AT+CHUP"; sleep 3
			amixer -c "$NUM" set 'Voice PCM Out' off
		else
			#echo "AT+CPIN=XXXX"; sleep 1	# use the pin script to unlock the SIM card
			echo "AT_ODO=0"; sleep 1
			echo "AT_OPCMENABLE=1"; sleep 1
			echo "AT_OPCMPROF=0"; sleep 1	# handset profile
			echo "AT_OLCC=1"; sleep 1	# report connection status
			echo "AT+VIP=0"; sleep 1	# compatible to S16_LE
			echo "AT+COPS"; sleep 1
			echo "AT+CLVL=4"; sleep 1
			echo "ATD$NUMBER;"; sleep 1	# make voice call (the ; is important)
			if [ "$MODE" = "-sw" ]
			then
				arecord -Ddefault:CARD=gta04 -fS16_LE -r8000 | aplay -Ddefault:CARD=Telephony &	# microphone -> modem
				arecord -Ddefault:CARD=Telephony -fS16_LE -r8000 | $SCRIPTPATH/twl $HANDSFREE -stdin	# modem -> earpiece, speaker, headset
			else
				echo "please ctl-C to end the call" >&2
				arecord -Ddefault:CARD=gta04 -fS16_LE -r8000 >/dev/null	# just enable micbias
				# sleep 99999	# we can't easily detect end of call (without monitoring femtocom output)
			fi
		fi
		) | $SCRIPTPATH/femtocom $IF
		;;

	/dev/ttyACM[0-4] | /dev/ttyUSB[0-4] )	# Neo900 / Pyra

		(
		NUM=$($SCRIPTPATH/findsoundcard "L15")
		if [ "$NUMBER" == "-" ]
		then
			echo "AT+CHUP"; sleep 3
		else
			#echo "AT+CPIN=XXXX"; sleep 1	# use the pin script to unlock the SIM card

			echo "AT+COPS"; sleep 1
			echo "AT^SAIC=3,1,1,0,1,0,1,0"; sleep 1
			echo "ATD$NUMBER;"; sleep 1	# make voice call (the ; is important)
			if [ "$MODE" = "-sw" ]
			then
				arecord -Ddefault:CARD=L15 -fS16_LE -r8000 | aplay -Ddefault:CARD=Telephony &	# microphone -> modem
				arecord -Ddefault:CARD=Telephony -fS16_LE -r8000 | $SCRIPTPATH/twl $HANDSFREE -stdin	# modem -> earpiece, speaker, headset
			else
				echo "please ctl-C to end the call" >&2
				arecord -Ddefault:CARD=L15 -fS16_LE -r8000 >/dev/null	# enable micbias
				amixer -c "$NUM" set 'Voice PCM Out' on
				sleep 99999
			fi
		fi
		) | $SCRIPTPATH/femtocom $IF

esac
