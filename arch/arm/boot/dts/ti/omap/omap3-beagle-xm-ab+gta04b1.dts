/*
 * Copyright (C) 2014 H. Nikolaus Schaller <hns@goldelico.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * the GTA04b1 is a BeagleBoard (XM) plus the OpenMoko-Beagle-Hybrid
 * adapter baord.
 *
 * This adapter supports
 *   TPO028TTEC! VGA LCD panel (same as Openmoko and GTA04)
 *   Backlight driver (GPIO / PWM)
 *   TSC2007 touch screen controller (2C2 + GPIO )
 *   W2SG0004 GPS receiver connected to UART2 + GPIO
 *   external antenna detect (GPIO )
 *   a breakout board may carrd a TSC6507 with 2 RGB LEDs (I2C2)
 *
 * These circuits have been integrated into the GTA04A2..5 boards so
 * we have sort of a subset of the GTA04 developments
 */

#include "omap3-beagle-xm-ab+gta04.dts"

/ {

	/* overwrite device model */
	model = "BeagleBoard XM / GTA04 b1 / OpenMoko-Beagle-Hybrid";

	aliases {
		display0 = &lcd;
		display1 = &tv0;
		/* display2 = &dvi0; we don't use DVI but LCD */
	};

	spi_lcd: spi_lcd {
		compatible = "spi-gpio";
		#address-cells = <0x1>;
		#size-cells = <0x0>;
		pinctrl-names = "default";
		pinctrl-0 = <&spi_gpio_pins>;

		gpio-sck = <&gpio6 2 0>;	/* gpio162 */
		gpio-miso = <&gpio5 31 0>;	/* gpio159 */
		gpio-mosi = <&gpio5 30 0>;	/* gpio158 */
		cs-gpios = <&gpio6 1 0>;	/* gpio161 */
		num-chipselects = <1>;

		/* lcd panel */
		lcd: td028ttec1@0 {
			compatible = "toppoly,td028ttec1";
			reg = <0>;
			spi-max-frequency = <100000>;
			spi-cpol;
			spi-cpha;

			label = "lcd";
			port {
				lcd_in: endpoint {
					remote-endpoint = <&dpi_out>;
				};
			};
		};
	};

	backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm 0 2000000>;
		brightness-levels = <0 11 20 30 40 50 60 70 80 90 100>;
		default-brightness-level = <80>;
		pinctrl-names = "default";
		pinctrl-0 = <&backlight_pins>;
		power-supply = <&power>;
	};

	pwm: omap_pwm {
		compatible = "ti,omap-pwm";
		timers = <&timer10>;
		#pwm-cells = <2>;
	};

	/* this is a workaround because the backlight pwm does not work */
	power: fixed_regulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "bl-enable";
		regulator-boot-on;
		regulator-always-on;
		regulator-min-microvolt = "22000000";
		regulator-max-microvolt = "22000000";
		gpio = <&gpio5 17 0>;	/* gpio145 (GPT10/PWM) */
		enable-active-high;
	};

	gpio-keys@1 {
		compatible = "gpio-keys";

		aux-button {
			label = "aux";
			linux,code = <169>;
			gpios = <&gpio5 8 GPIO_ACTIVE_HIGH>;	/* gpio136 */
		};

		power-button {
			label = "power";
			linux,code = <170>;
			gpios = <&gpio5 9 GPIO_ACTIVE_HIGH>;	/* gpio137 */
		};
	};

	antenna-detect {
		compatible = "extcon-gpio";
		label = "gps_antenna";
		debounce-delay-ms = <10>;
		interrupt-parent = <&gpio5>;
		interrupts = <10 IRQ_TYPE_EDGE_BOTH>; /* gpio138 */
		irq-flags = <IRQ_TYPE_EDGE_BOTH>;
		gpios = <&gpio5 10 GPIO_ACTIVE_HIGH>; /* gpio138 */
		state-on = "external";
		state-off = "internal";
	};

	/* don't match these drivers inherited from omap3-beagle-xm-ab.dts */
	dvi0: connector@0 {
		compatible = "dvi-connector-disabled";
	};

	tfp410: encoder@0 {
		compatible = "ti,tfp410-disabled";
	};

	gps_en: w2sg0004 { /* presents a single gpio to be plumbed to uart2 dts */
		compatible = "wi2wi,w2sg0004";
		gpio-controller;
		#gpio-cells = <2>;

		pinctrl-names = "default", "monitor";
		pinctrl-0 = <&uart2_pins>;
		pinctrl-1 = <&uart2_rx_irq_pins>;

		interrupt-parent = <&gpio5>;
		interrupts = <15 IRQ_TYPE_EDGE_FALLING>;	/* uart2.rx = gpio143 - trigger on arrival of start bit */

	// not available on this board!	lna-supply = <&vsim>;	/* LNA regulator */
		on-off-gpio = <&gpio5 28 0>;	/* gpio156: trigger for turning on/off w2sg0004 */
	};

	leds {

		compatible = "gpio-leds";
		led@1 {
			label = "omap3:red:aux";
			gpios = <&gpio3 24 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};
		led@2 {
			label = "omap3:green:aux";
			gpios = <&gpio3 25 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};
		led@3 {
			label = "omap3:red:power";
			gpios = <&gpio3 14 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "mmc0";
			default-state = "off";
		};
		led@4 {
			label = "omap3:green:power";
			gpios = <&gpio3 15 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};
	};
};

&omap3_pmx_core {
	pinctrl-names = "default";
	pinctrl-0 = <
			&hsusb2_pins
			&i2c2_pins
			&button_pins
			&w2sg_pins
			&backlight_pins
			&dss_gpio_pins
	>;
	uart2_pins: pinmux_uart2_pins {
		pinctrl-single,pins = <
			OMAP3_CORE1_IOPAD(0x2172, PIN_INPUT | MUX_MODE1)                /* mcbsp3_clkx.uart2_rx = gpio143 */
			OMAP3_CORE1_IOPAD(0x2178, PIN_OUTPUT | MUX_MODE0)               /* uart2_tx.uart2_tx = gpio146 */
		>;
	};

	uart2_rx_irq_pins: pinmux_uart2_rx_irq_pins {
		pinctrl-single,pins = <
			/* switch RX to GPIO so that we can get interrupts by the start bit */
			OMAP3_CORE1_IOPAD(0x2172, PIN_INPUT | MUX_MODE4)                /* uart2_rx.uart2_rx = gpio143 */
			OMAP3_CORE1_IOPAD(0x2178, PIN_OUTPUT | MUX_MODE0)               /* uart2_tx.uart2_tx = gpio146 */
		>;
	};

	i2c2_pins: pinmux_i2c2_pins {
		pinctrl-single,pins = <
			OMAP3_CORE1_IOPAD(0x21be, PIN_INPUT_PULLUP | MUX_MODE0) /* i2c2_scl.i2c2_scl */
			OMAP3_CORE1_IOPAD(0x21c0, PIN_INPUT_PULLUP | MUX_MODE0) /* i2c2_sda.i2c2_sda */
		>;
	};

	backlight_pins: backlight_pins_pimnux {
		pinctrl-single,pins = <
			OMAP3_CORE1_IOPAD(0x2176, PIN_OUTPUT | MUX_MODE4)	/* uart2.rts - gpt10/gpio145 - backlight */
		>;
	};

	button_pins: pinmux_button_pins {
		pinctrl-single,pins = <
			OMAP3_CORE1_IOPAD(0x2164, PIN_INPUT_PULLUP | MUX_MODE4) /* gpio136 - aux */
			OMAP3_CORE1_IOPAD(0x2166, PIN_INPUT_PULLUP | MUX_MODE4) /* gpio137 - power */
		>;
	};

	w2sg_pins: pinmux_w2sg_pins {
		pinctrl-single,pins = <
			OMAP3_CORE1_IOPAD(0x218c, PIN_OUTPUT | MUX_MODE4) /* gpio156 - gps on/off */
			OMAP3_CORE1_IOPAD(0x2168, PIN_INPUT_PULLUP | MUX_MODE4) /* gpio138 - extcon */
		>;
	};

	penirq_pins: pinmux_penirq_pins {
		pinctrl-single,pins = <
			/* here we could enable to wakeup the cpu from suspend by a pen touch */
			OMAP3_CORE1_IOPAD(0x218e, PIN_INPUT_PULLUP | MUX_MODE4) /* gpio157 - penirq */
		>;
	};

	spi_gpio_pins: spi_gpio_pinmux {
		pinctrl-single,pins = <
			OMAP3_CORE1_IOPAD(0x2198, PIN_OUTPUT | MUX_MODE4) /* gpio162 - clk */
			OMAP3_CORE1_IOPAD(0x2196, PIN_OUTPUT | MUX_MODE4) /* gpio161 - cs */
			OMAP3_CORE1_IOPAD(0x2190, PIN_OUTPUT | MUX_MODE4) /* gpio158 - tx */
			OMAP3_CORE1_IOPAD(0x2192, PIN_INPUT | MUX_MODE4) /* gpio159 - rx */
		>;
	};

	dss_gpio_pins: dss_gpio_pinmux { /* DSS pins not used for panel but as GPIOs */
		pinctrl-single,pins = <
			OMAP3_CORE1_IOPAD(0x2100, PIN_OUTPUT | MUX_MODE4)   /* dss_data18.dss_data0 */
			OMAP3_CORE1_IOPAD(0x2102, PIN_OUTPUT | MUX_MODE4)   /* dss_data19.dss_data1 */
			OMAP3_CORE1_IOPAD(0x20ec, PIN_OUTPUT | MUX_MODE4)   /* dss_data8.dss_data8 */
			OMAP3_CORE1_IOPAD(0x20ee, PIN_OUTPUT | MUX_MODE4)   /* dss_data9.dss_data9 */
			OMAP3_CORE1_IOPAD(0x20fc, PIN_OUTPUT | MUX_MODE4)   /* dss_data16.dss_data16 */
			OMAP3_CORE1_IOPAD(0x20fe, PIN_INPUT | MUX_MODE4)   /* dss_data17.dss_data17 */
		>;
	};

};

&i2c2 {
	clock-frequency = <400000>;

	/* leds */
	tca_gpios: tca6507@45 {
		compatible = "ti,tca6507";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0x45>;

		gpio-controller;
		#gpio-cells = <2>;

		gta04_led0: led@0 {
			label = "gta04:red:aux";
			reg = <0x0>;
			linux,default-trigger = "mmc0";
		};

		gta04_led1: led@1 {
			label = "gta04:green:aux";
			reg = <0x1>;
			linux,default-trigger = "mmc0";
		};

		gta04_led2: led@2 {
			label = "gta04:blue:aux";
			reg = <0x2>;
			linux,default-trigger = "mmc0";
		};

		gta04_led3: led@3 {
			label = "gta04:red:power";
			reg = <0x3>;
			linux,default-trigger = "heartbeat";
		};

		gta04_led4: led@4 {
			label = "gta04:green:power";
			reg = <0x4>;
			linux,default-trigger = "heartbeat";
		};

		gta04_led5: led@5 {
			label = "gta04:blue:power";
			reg = <0x5>;
			linux,default-trigger = "heartbeat";
		};

	};

	/* touchscreen */
	tsc2007@48 {
		compatible = "ti,tsc2007";
		reg = <0x48>;
		pinctrl-names = "default";
		pinctrl-0 = <&penirq_pins>;
		interrupt-parent = <&gpio5>;
		interrupts = <29 IRQ_TYPE_EDGE_FALLING>;	/* gpio157 */
		gpios = <&gpio5 29 GPIO_ACTIVE_LOW>;	/* gpio157 */
		ti,x-plate-ohms = <550>;
		ti,min-x = <0x100>;
		ti,max-x = <0xf00>;
		ti,min-y = <0x100>;
		ti,max-y = <0xf00>;
		ti,min-rt = <0xfff>;
		ti,max-rt = <0>;
	};

};

&uart2 { /* GPS /dev/ttyO1 */
	dtr-gpio = <&gps_en 0 GPIO_ACTIVE_HIGH>;	/* w2sg0004 GPS power control through virtual gpio */
};

&dss {
	pinctrl-names = "default";
	pinctrl-0 = <
		&dss_dpi_pins1
		&dss_dpi_pins2
	>;

	status = "ok";

	port {
		dpi_out: endpoint {
			remote-endpoint = <&lcd_in>;
			data-lines = <24>;
		};
	};
};

&dss_dpi_pins1 { /* same as standard BB XM - except that we define data0/1, 8/9, 16/17 as GPIOs in the main mux block */
	pinctrl-single,pins = <
		OMAP3_CORE1_IOPAD(0x20d4, PIN_OUTPUT | MUX_MODE0)   /* dss_pclk.dss_pclk */
		OMAP3_CORE1_IOPAD(0x20d6, PIN_OUTPUT | MUX_MODE0)   /* dss_hsync.dss_hsync */
		OMAP3_CORE1_IOPAD(0x20d8, PIN_OUTPUT | MUX_MODE0)   /* dss_vsync.dss_vsync */
		OMAP3_CORE1_IOPAD(0x20da, PIN_OUTPUT | MUX_MODE0)   /* dss_acbias.dss_acbias */

		OMAP3_CORE1_IOPAD(0x20e8, PIN_OUTPUT | MUX_MODE0)   /* dss_data6.dss_data6 */
		OMAP3_CORE1_IOPAD(0x20ea, PIN_OUTPUT | MUX_MODE0)   /* dss_data7.dss_data7 */
		OMAP3_CORE1_IOPAD(0x20f0, PIN_OUTPUT | MUX_MODE0)   /* dss_data10.dss_data10 */
		OMAP3_CORE1_IOPAD(0x20f2, PIN_OUTPUT | MUX_MODE0)   /* dss_data11.dss_data11 */
		OMAP3_CORE1_IOPAD(0x20f4, PIN_OUTPUT | MUX_MODE0)   /* dss_data12.dss_data12 */
		OMAP3_CORE1_IOPAD(0x20f6, PIN_OUTPUT | MUX_MODE0)   /* dss_data13.dss_data13 */
		OMAP3_CORE1_IOPAD(0x20f8, PIN_OUTPUT | MUX_MODE0)   /* dss_data14.dss_data14 */
		OMAP3_CORE1_IOPAD(0x20fa, PIN_OUTPUT | MUX_MODE0)   /* dss_data15.dss_data15 */

		OMAP3_CORE1_IOPAD(0x2104, PIN_OUTPUT | MUX_MODE3)   /* dss_data20.dss_data2 */
		OMAP3_CORE1_IOPAD(0x2106, PIN_OUTPUT | MUX_MODE3)   /* dss_data21.dss_data3 */
		OMAP3_CORE1_IOPAD(0x2108, PIN_OUTPUT | MUX_MODE3)   /* dss_data22.dss_data4 */
		OMAP3_CORE1_IOPAD(0x210a, PIN_OUTPUT | MUX_MODE3)   /* dss_data23.dss_data5 */
	>;
};

&vaux1 { /* provide 3.3V to LEDs, panel, GPS */
	regulator-min-microvolt = <3000000>;
	regulator-max-microvolt = <3000000>;
	regulator-always-on;
};
