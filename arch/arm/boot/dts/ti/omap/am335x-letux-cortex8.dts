/*
 * Copyright (C) 2016 H. Nikolaus Schaller <hns@goldelico.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am335x-osd335x-common.dtsi"
#include <dt-bindings/input/input.h>

/* FIXME:
 * configure external gpios, spi, uart, i2c, adc
 * configure internal buttons
 * configure internal leds
 */

/* FIXME: replace this since we have no P8/P9 connectors! */

// taken from https://github.com/RobertCNelson/dtb-linux-dev/blob/master/src/arm/

#ifndef _DT_BINDINGS_BOARD_AM335X_BBW_BBB_BASE_H
#define _DT_BINDINGS_BOARD_AM335X_BBW_BBB_BASE_H

#define BONE_P8_03 AM335X_PIN_GPMC_AD6
#define BONE_P8_04 AM335X_PIN_GPMC_AD7

#define BONE_P8_05 AM335X_PIN_GPMC_AD2
#define BONE_P8_06 AM335X_PIN_GPMC_AD3
#define BONE_P8_07 AM335X_PIN_GPMC_ADVN_ALE
#define BONE_P8_08 AM335X_PIN_GPMC_OEN_REN

#define BONE_P8_09 AM335X_PIN_GPMC_BEN0_CLE
#define BONE_P8_10 AM335X_PIN_GPMC_WEN
#define BONE_P8_11 AM335X_PIN_GPMC_AD13
#define BONE_P8_12 AM335X_PIN_GPMC_AD12

#define BONE_P8_13 AM335X_PIN_GPMC_AD9
#define BONE_P8_14 AM335X_PIN_GPMC_AD10
#define BONE_P8_15 AM335X_PIN_GPMC_AD15
#define BONE_P8_16 AM335X_PIN_GPMC_AD14

#define BONE_P8_17 AM335X_PIN_GPMC_AD11
#define BONE_P8_18 AM335X_PIN_GPMC_CLK
#define BONE_P8_19 AM335X_PIN_GPMC_AD8
#define BONE_P8_20 AM335X_PIN_GPMC_CSN2

#define BONE_P8_21 AM335X_PIN_GPMC_CSN1
#define BONE_P8_22 AM335X_PIN_GPMC_AD5
#define BONE_P8_23 AM335X_PIN_GPMC_AD4
#define BONE_P8_24 AM335X_PIN_GPMC_AD1

#define BONE_P8_25 AM335X_PIN_GPMC_AD0
#define BONE_P8_26 AM335X_PIN_GPMC_CSN0
#define BONE_P8_27 AM335X_PIN_LCD_VSYNC
#define BONE_P8_28 AM335X_PIN_LCD_PCLK

#define BONE_P8_29 AM335X_PIN_LCD_HSYNC
#define BONE_P8_30 AM335X_PIN_LCD_AC_BIAS_EN
#define BONE_P8_31 AM335X_PIN_LCD_DATA14
#define BONE_P8_32 AM335X_PIN_LCD_DATA15

#define BONE_P8_33 AM335X_PIN_LCD_DATA13
#define BONE_P8_34 AM335X_PIN_LCD_DATA11
#define BONE_P8_35 AM335X_PIN_LCD_DATA12
#define BONE_P8_36 AM335X_PIN_LCD_DATA10

#define BONE_P8_37 AM335X_PIN_LCD_DATA8
#define BONE_P8_38 AM335X_PIN_LCD_DATA9
#define BONE_P8_39 AM335X_PIN_LCD_DATA6
#define BONE_P8_40 AM335X_PIN_LCD_DATA7

#define BONE_P8_41 AM335X_PIN_LCD_DATA4
#define BONE_P8_42 AM335X_PIN_LCD_DATA5
#define BONE_P8_43 AM335X_PIN_LCD_DATA2
#define BONE_P8_44 AM335X_PIN_LCD_DATA3

#define BONE_P8_45 AM335X_PIN_LCD_DATA0
#define BONE_P8_46 AM335X_PIN_LCD_DATA1

#define BONE_P9_11 AM335X_PIN_GPMC_WAIT0
#define BONE_P9_12 AM335X_PIN_GPMC_BEN1

#define BONE_P9_13 AM335X_PIN_GPMC_WPN
#define BONE_P9_14 AM335X_PIN_GPMC_A2
#define BONE_P9_15 AM335X_PIN_GPMC_A0
#define BONE_P9_16 AM335X_PIN_GPMC_A3

#define BONE_P9_17 AM335X_PIN_SPI0_CS0
#define BONE_P9_18 AM335X_PIN_SPI0_D1
#define BONE_P9_19 AM335X_PIN_UART1_RTSN
#define BONE_P9_20 AM335X_PIN_UART1_CTSN

#define BONE_P9_21 AM335X_PIN_SPI0_D0
#define BONE_P9_22 AM335X_PIN_SPI0_SCLK
#define BONE_P9_23 AM335X_PIN_GPMC_A1
#define BONE_P9_24 AM335X_PIN_UART1_TXD

#define BONE_P9_25 AM335X_PIN_MCASP0_AHCLKX
#define BONE_P9_26 AM335X_PIN_UART1_RXD
#define BONE_P9_27 AM335X_PIN_MCASP0_FSR
#define BONE_P9_28 AM335X_PIN_MCASP0_AHCLKR

#define BONE_P9_29 AM335X_PIN_MCASP0_FSX
#define BONE_P9_30 AM335X_PIN_MCASP0_AXR0
#define BONE_P9_31 AM335X_PIN_MCASP0_ACLKX

/* Shared P21 of P11 */
#define BONE_P9_41A AM335X_PIN_XDMA_EVENT_INTR1
#define BONE_P9_41B AM335X_PIN_MCASP0_AXR1

/* Shared P22 of P11 */
#define BONE_P9_42A AM335X_PIN_ECAP0_IN_PWM0_OUT
#define BONE_P9_42B AM335X_PIN_MCASP0_ACLKR

#endif


/ {
	/* overwrite device model */
	model = "Letux Cortex 8";
	compatible = "goldelico,lc8", "octavo,osd3358", "ti,am33xx";

	chosen {
		stdout-path = &uart0;
	};

	leds {
		pinctrl-names = "default";
		pinctrl-0 = <&user_leds_s0>;

		compatible = "gpio-leds";

		led2 {
			label = "lc8:red:heartbeat";
			gpios = <&gpio1 21 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};

		led3 {
			label = "lc8:red:mmc0";
			gpios = <&gpio1 22 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "mmc0";
			default-state = "off";
		};

		led4 {
			label = "lc8:red:usr2";
			gpios = <&gpio1 23 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "cpu0";
			default-state = "off";
		};

		led5 {
			label = "lc8:red:usr3";
			gpios = <&gpio1 26 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "mmc1";
			default-state = "off";
		};
	};

	vmmcsd_fixed: fixedregulator0 {
		compatible = "regulator-fixed";
		regulator-name = "vmmcsd_fixed";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	gpio-keys {
		compatible = "gpio-keys";

		pinctrl-names = "default";
		pinctrl-0 = <&button_pins>;

		user-button {
			label = "user";
			linux,code = <KEY_ENTER>;
			gpios = <&gpio2 8 GPIO_ACTIVE_LOW>;
			gpio-key,wakeup;
		};

	};

};

&am33xx_pinmux {

	button_pins: pinmux_button_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(0x0a8, PIN_INPUT_PULLUP, MUX_MODE7)	/* KEY_ENTER lcd_data2.gpio2_8, */
		>;
	};

	emmc_pins: pinmux_emmc_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_GPMC_CSN1, PIN_INPUT_PULLUP, MUX_MODE2) /* gpmc_csn1.mmc1_clk */
			AM33XX_PADCONF(AM335X_PIN_GPMC_CSN2, PIN_INPUT_PULLUP, MUX_MODE2) /* gpmc_csn2.mmc1_cmd */
			AM33XX_PADCONF(AM335X_PIN_GPMC_AD0, PIN_INPUT_PULLUP, MUX_MODE1) /* gpmc_ad0.mmc1_dat0 */
			AM33XX_PADCONF(AM335X_PIN_GPMC_AD1, PIN_INPUT_PULLUP, MUX_MODE1) /* gpmc_ad1.mmc1_dat1 */
			AM33XX_PADCONF(AM335X_PIN_GPMC_AD2, PIN_INPUT_PULLUP, MUX_MODE1) /* gpmc_ad2.mmc1_dat2 */
			AM33XX_PADCONF(AM335X_PIN_GPMC_AD3, PIN_INPUT_PULLUP, MUX_MODE1) /* gpmc_ad3.mmc1_dat3 */
			AM33XX_PADCONF(AM335X_PIN_GPMC_AD4, PIN_INPUT_PULLUP, MUX_MODE1) /* gpmc_ad4.mmc1_dat4 */
			AM33XX_PADCONF(AM335X_PIN_GPMC_AD5, PIN_INPUT_PULLUP, MUX_MODE1) /* gpmc_ad5.mmc1_dat5 */
			AM33XX_PADCONF(AM335X_PIN_GPMC_AD6, PIN_INPUT_PULLUP, MUX_MODE1) /* gpmc_ad6.mmc1_dat6 */
			AM33XX_PADCONF(AM335X_PIN_GPMC_AD7, PIN_INPUT_PULLUP, MUX_MODE1) /* gpmc_ad7.mmc1_dat7 */
		>;
	};

	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_MII1_RX_ER, PIN_INPUT_PULLUP, MUX_MODE3)	// I2C1 SCL
			AM33XX_PADCONF(AM335X_PIN_MII1_CRS, PIN_INPUT_PULLUP, MUX_MODE3)	// I2C1 SDA
		>;
	};

	i2c2_pins: pinmux_i2c2_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(BONE_P9_21, PIN_INPUT_PULLUP, MUX_MODE2)	// I2C2 SCL
			AM33XX_PADCONF(BONE_P9_22, PIN_INPUT_PULLUP, MUX_MODE2)	// I2C2 SDA
		>;
	};

	mmc1_pins: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_SPI0_CS1, PIN_INPUT, MUX_MODE7)		/* spio0_cs1.gpio0_6 */
			AM33XX_PADCONF(AM335X_PIN_MMC0_DAT0, PIN_INPUT_PULLUP, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_MMC0_DAT1, PIN_INPUT_PULLUP, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_MMC0_DAT2, PIN_INPUT_PULLUP, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_MMC0_DAT3, PIN_INPUT_PULLUP, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_MMC0_CMD, PIN_INPUT_PULLUP, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_MMC0_CLK, PIN_INPUT_PULLUP, MUX_MODE0)
		>;
	};

	uart0_pins: pinmux_uart0_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_UART0_RXD, PIN_INPUT_PULLUP, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_UART0_TXD, PIN_OUTPUT_PULLDOWN, MUX_MODE0)
		>;
	};

	user_leds_s0: user_leds_s0 {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_GPMC_A5, PIN_OUTPUT_PULLDOWN, MUX_MODE7)	/* gpmc_a5.gpio1_21 */
			AM33XX_PADCONF(AM335X_PIN_GPMC_A6, PIN_OUTPUT_PULLUP, MUX_MODE7)	/* gpmc_a6.gpio1_22 */
			AM33XX_PADCONF(AM335X_PIN_GPMC_A7, PIN_OUTPUT_PULLDOWN, MUX_MODE7)	/* gpmc_a7.gpio1_23 */
			AM33XX_PADCONF(AM335X_PIN_GPMC_A10, PIN_OUTPUT_PULLUP, MUX_MODE7)	/* gpmc_a10.gpio1_26 */
		>;
	};

	hdq_pins: pinmux_hdq_pins {
		pinctrl-single,pins = <
			0x10c	(PIN_INPUT_PULLUP | MUX_MODE3)	// I2C1 SDA -> FIXME: gpio 1_18
		>;
	};
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;

	status = "disabled";
	clock-frequency = <400000>;
};

&i2c2 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins>;

	status = "disabled";
	clock-frequency = <400000>;
};

/* usually, we have no display connected */
&lcdc {
	status = "disabled";
};

&ldo3_reg {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

/* no ethernet */
&mac {
	status = "disabled";
};

&mmc1 {
	vmmc-supply = <&vmmcsd_fixed>;
	pinctrl-names = "default";
	pinctrl-0 = <&mmc1_pins>;
	bus-width = <0x4>;
	status = "okay";
	cd-gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;
};

&mmc2 {
	vmmc-supply = <&vmmcsd_fixed>;
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
	bus-width = <8>;
	status = "okay";
	non-removable;
};

&rtc {
	clocks = <&clk_32768_ck>, <&clk_24mhz_clkctrl AM3_CLK_24MHZ_CLKDIV32K_CLKCTRL 0>;
	clock-names = "ext-clk", "int-clk";
	system-power-controller;
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;

	status = "okay";
};

&usb0 {
	dr_mode = "peripheral";
	interrupts-extended = <&intc 18 &tps 0>;
	interrupt-names = "mc", "vbus";
};

&usb1 {
	dr_mode = "host";
};

/* allow full poweroff */

&tps {
	/delete-property/ ti,pmic-shutdown-controller;
};

/* no touch screen but 3 ADC channels */
&tscadc {
	status = "okay";

	adc {
		ti,adc-channels = <0 1 2>;
	};
};

/* application */

&i2c1 {
	clock-frequency = <100000>;

	bq27421@55 {
		compatible = "ti,bq27421";
		reg = <0x55>;
	};
};

/ {
	hdq: onewire {
		pinctrl-names = "default";
		pinctrl-0 = <&hdq_pins>;
		compatible = "w1-gpio";
		gpios = <&gpio1 18 GPIO_ACTIVE_HIGH>;
		linux,open-drain;

		battery {
			// ...
		};
	};
};
