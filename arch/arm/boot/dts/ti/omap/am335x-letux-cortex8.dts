/*
 * Copyright (C) 2016 H. Nikolaus Schaller <hns@goldelico.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

// FIXME: base on #include "am335x-boneblack.dts"

#include "am33xx.dtsi"
#include "am335x-bone-common.dtsi"
#include <dt-bindings/input/input.h>

/* FIXME:
 * configure external gpios, spi, uart, i2c, adc
 * configure internal buttons
 * configure internal leds
 */

/* FIXME: replace this since we have no P8/P9 connectors! */

// taken from https://github.com/RobertCNelson/dtb-linux-dev/blob/master/src/arm/

#ifndef _DT_BINDINGS_BOARD_AM335X_BBW_BBB_BASE_H
#define _DT_BINDINGS_BOARD_AM335X_BBW_BBB_BASE_H

#define BONE_P8_03 0x018
#define BONE_P8_04 0x01C

#define BONE_P8_05 0x008
#define BONE_P8_06 0x00C
#define BONE_P8_07 0x090
#define BONE_P8_08 0x094

#define BONE_P8_09 0x09C
#define BONE_P8_10 0x098
#define BONE_P8_11 0x034
#define BONE_P8_12 0x030

#define BONE_P8_13 0x024
#define BONE_P8_14 0x028
#define BONE_P8_15 0x03C
#define BONE_P8_16 0x038

#define BONE_P8_17 0x02C
#define BONE_P8_18 0x08C
#define BONE_P8_19 0x020
#define BONE_P8_20 0x084

#define BONE_P8_21 0x080
#define BONE_P8_22 0x014
#define BONE_P8_23 0x010
#define BONE_P8_24 0x004

#define BONE_P8_25 0x000
#define BONE_P8_26 0x07C
#define BONE_P8_27 0x0E0
#define BONE_P8_28 0x0E8

#define BONE_P8_29 0x0E4
#define BONE_P8_30 0x0EC
#define BONE_P8_31 0x0D8
#define BONE_P8_32 0x0DC

#define BONE_P8_33 0x0D4
#define BONE_P8_34 0x0CC
#define BONE_P8_35 0x0D0
#define BONE_P8_36 0x0C8

#define BONE_P8_37 0x0C0
#define BONE_P8_38 0x0C4
#define BONE_P8_39 0x0B8
#define BONE_P8_40 0x0BC

#define BONE_P8_41 0x0B0
#define BONE_P8_42 0x0B4
#define BONE_P8_43 0x0A8
#define BONE_P8_44 0x0AC

#define BONE_P8_45 0x0A0
#define BONE_P8_46 0x0A4

#define BONE_P9_11 0x070
#define BONE_P9_12 0x078

#define BONE_P9_13 0x074
#define BONE_P9_14 0x048
#define BONE_P9_15 0x040
#define BONE_P9_16 0x04C

#define BONE_P9_17 0x15C
#define BONE_P9_18 0x158
#define BONE_P9_19 0x17C
#define BONE_P9_20 0x178

#define BONE_P9_21 0x154
#define BONE_P9_22 0x150
#define BONE_P9_23 0x044
#define BONE_P9_24 0x184

#define BONE_P9_25 0x1AC
#define BONE_P9_26 0x180
#define BONE_P9_27 0x1A4
#define BONE_P9_28 0x19C

#define BONE_P9_29 0x194
#define BONE_P9_30 0x198
#define BONE_P9_31 0x190

/* Shared P21 of P11 */
#define BONE_P9_41A 0x1B4
#define BONE_P9_41B 0x1A8

/* Shared P22 of P11 */
#define BONE_P9_42A 0x164
#define BONE_P9_42B 0x1A0

#endif


/ {
	/* overwrite device model */
	model = "Letux Cortex 8";
	compatible = "goldelico,lc8", "ti,am335x-bone-black", "ti,am335x-bone", "ti,am33xx", "octavo,osd3358";

	leds {
		led5 {
			gpios = <&gpio1 26 GPIO_ACTIVE_HIGH>;
		};
	};

	gpio-keys {
		compatible = "gpio-keys";

		pinctrl-names = "default";
		pinctrl-0 = <&button_pins>;

		user-button {
			label = "user";
			linux,code = <KEY_ENTER>;
			gpios = <&gpio2 8 GPIO_ACTIVE_LOW>;
			gpio-key,wakeup;
		};

	};

};

&user_leds_s0 {
	pinctrl-single,pins = <
		AM33XX_PADCONF(AM335X_PIN_GPMC_A5, PIN_OUTPUT_PULLDOWN, MUX_MODE7)	/* gpmc_a5.gpio1_21 */
		AM33XX_PADCONF(AM335X_PIN_GPMC_A6, PIN_OUTPUT_PULLUP, MUX_MODE7)	/* gpmc_a6.gpio1_22 */
		AM33XX_PADCONF(AM335X_PIN_GPMC_A7, PIN_OUTPUT_PULLDOWN, MUX_MODE7)	/* gpmc_a7.gpio1_23 */
		AM33XX_PADCONF(AM335X_PIN_GPMC_A10, PIN_OUTPUT_PULLUP, MUX_MODE7)	/* gpmc_a10.gpio1_26 */
	>;
};

/* usually, we have no display connected */
&lcdc {
	status = "disabled";
};

&rtc {
	system-power-controller;
};

/* no touch screen but 3 ADC channels */
&tscadc {
	status = "okay";

	adc {
		ti,adc-channels = <0 1 2>;
	};
};

&ldo3_reg {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

&mmc1 {
	vmmc-supply = <&vmmcsd_fixed>;
};

&mmc2 {
	vmmc-supply = <&vmmcsd_fixed>;
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
	bus-width = <8>;
	status = "okay";
	non-removable;
};

/* no ethernet */
&mac {
	status = "disabled";
};

&am33xx_pinmux {

	button_pins: pinmux_button_pins {
		pinctrl-single,pins = <
			0x0a8 0x2f	/* KEY_ENTER lcd_data2.gpio2_8, INPUT | PULLDIS | MODE7 */
		>;
	};

	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			0x110	(PIN_INPUT_PULLUP | MUX_MODE3)	// I2C1 SCL
			0x10c	(PIN_INPUT_PULLUP | MUX_MODE3)	// I2C1 SDA
		>;
	};

	i2c2_pins: pinmux_i2c2_pins {
		pinctrl-single,pins = <
			BONE_P9_21 (PIN_INPUT_PULLUP | MUX_MODE2)	// I2C2 SCL
			BONE_P9_22 (PIN_INPUT_PULLUP | MUX_MODE2)	// I2C2 SDA
		>;
	};
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;

	status = "disabled";
	clock-frequency = <100000>;
};

&i2c2 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins>;

	status = "disabled";
	clock-frequency = <400000>;
};
